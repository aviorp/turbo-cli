
// Generated by turbo-cli at {{.Timestamp}}
import { DatabaseError } from '@papito/shared/errors';

class {{.Name | title}}Service {
    async getAll() {
        try {
            return [
                {
                    id: '0193d073-74ce-7225-a5fb-0bc706710a4c',
                    name: 'sample{{.Name | title}}',
                    createdAt: new Date().toISOString(),
                    updatedAt: new Date().toISOString(),
                },
            ];
        } catch (error) {
            throw new DatabaseError('Failed to get {{.Name}} data: ' + error);
        }
    }

    async getById(id: string) {
        try {
            return {
                id,
                name: 'sample{{.Name | title}}',
                createdAt: new Date().toISOString(),
                updatedAt: new Date().toISOString(),
            };
        } catch (error) {
            throw new DatabaseError('Failed to get {{.Name}} by id: ' + error);
        }
    }

    async create(data: any) {
        try {
            return {
                id: '0193d073-74ce-7225-a5fb-0bc706710a4c',
                ...data,
                createdAt: new Date().toISOString(),
                updatedAt: new Date().toISOString(),
            };
        } catch (error) {
            throw new DatabaseError('Failed to create {{.Name}}: ' + error);
        }
    }

    async update(id: string, data: any) {
        try {
            return {
                id,
                ...data,
                updatedAt: new Date().toISOString(),
            };
        } catch (error) {
            throw new DatabaseError('Failed to update {{.Name}}: ' + error);
        }
    }

    async delete(id: string) {
        try {
            return { id, deleted: true };
        } catch (error) {
            throw new DatabaseError('Failed to delete {{.Name}}: ' + error);
        }
    }
}

let maybe{{.Name | title}}Service: {{.Name | title}}Service | null = null;

export function getOrCreate{{.Name | title}}Service(): {{.Name | title}}Service {
    if (maybe{{.Name | title}}Service) {
        return maybe{{.Name | title}}Service;
    }

    maybe{{.Name | title}}Service = new {{.Name | title}}Service();
    return maybe{{.Name | title}}Service;
}
